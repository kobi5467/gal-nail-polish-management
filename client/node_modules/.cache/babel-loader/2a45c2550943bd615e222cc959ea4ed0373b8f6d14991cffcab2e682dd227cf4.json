{"ast":null,"code":"import _regeneratorRuntime from\"/home/kobi/kobi_devs/web-project-moran/gel-nail-polish-management-project/client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/home/kobi/kobi_devs/web-project-moran/gel-nail-polish-management-project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/home/kobi/kobi_devs/web-project-moran/gel-nail-polish-management-project/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from\"react\";import{Grid,Typography,IconButton,List,ListItem}from\"@mui/material\";import{getAppointmentsByDate}from\"../../../../controllers/appointments_controller\";import{primaryColor}from\"../../../../constants/colors\";import{useUserContext}from\"../../../../components/contexts/user_context_provider\";import{useSnackbar}from\"notistack\";import AddAppointmentForm from\"./forms/add_appointment_form\";import UpdateAppointmentForm from\"./forms/update_appointment_form\";import AppointmentList from\"./appointments_list\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SelectedDayAppointments=function SelectedDayAppointments(_ref){var selectedDay=_ref.selectedDay,selectedMonth=_ref.selectedMonth,selectedYear=_ref.selectedYear,reload=_ref.reload,setReload=_ref.setReload;var _useUserContext=useUserContext(),token=_useUserContext.token;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),appointments=_useState2[0],setAppointments=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),isAddForm=_useState4[0],setIsAddForm=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),selectedAppointment=_useState6[0],setSelectedAppointment=_useState6[1];useEffect(function(){setIsAddForm(function(isAddForm){return false;});},[selectedAppointment]);useEffect(function(){setIsAddForm(true);var getAppointmentsInternal=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getAppointmentsByDate(token,\"\".concat(selectedDay,\"-\").concat(selectedMonth,\"-\").concat(selectedYear));case 2:response=_context.sent;console.log(JSON.stringify(response));if(response.status===\"OK\"){setAppointments(response.data);}case 5:case\"end\":return _context.stop();}}},_callee);}));return function getAppointmentsInternal(){return _ref2.apply(this,arguments);};}();getAppointmentsInternal();return function(){};},[selectedDay,selectedMonth,selectedYear,reload]);return/*#__PURE__*/_jsxs(Grid,{container:true,style:{backgroundColor:primaryColor,padding:15,borderRadius:12},children:[/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{fontWeight:\"bold\",color:\"white\"},children:\"Date: \".concat(selectedDay,\".\").concat(selectedMonth+1,\".\").concat(selectedYear)})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,style:{height:\"20px\"}}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:isAddForm?/*#__PURE__*/_jsx(AddAppointmentForm,{setReload:setReload,selectedDate:\"\".concat(selectedDay,\"-\").concat(selectedMonth,\"-\").concat(selectedYear)}):/*#__PURE__*/_jsx(UpdateAppointmentForm,{setIsAddForm:setIsAddForm,appointment:selectedAppointment,setReload:setReload})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,style:{height:\"20px\"}}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,children:/*#__PURE__*/_jsx(Typography,{variant:\"h5\",style:{fontWeight:\"bold\",color:\"white\"},children:\"Appointments\"})}),/*#__PURE__*/_jsx(Grid,{item:true,xs:12,style:{height:\"10px\"}}),/*#__PURE__*/_jsx(Grid,{item:true,container:true,xs:12,children:/*#__PURE__*/_jsx(AppointmentList,{appointments:appointments,setSelectedAppointment:setSelectedAppointment,setReload:setReload})})]});};export default SelectedDayAppointments;","map":{"version":3,"names":["React","useEffect","useState","Grid","Typography","IconButton","List","ListItem","getAppointmentsByDate","primaryColor","useUserContext","useSnackbar","AddAppointmentForm","UpdateAppointmentForm","AppointmentList","SelectedDayAppointments","selectedDay","selectedMonth","selectedYear","reload","setReload","token","appointments","setAppointments","isAddForm","setIsAddForm","selectedAppointment","setSelectedAppointment","getAppointmentsInternal","response","console","log","JSON","stringify","status","data","backgroundColor","padding","borderRadius","fontWeight","color","height"],"sources":["/home/kobi/kobi_devs/web-project-moran/gel-nail-polish-management-project/client/src/screens/dashboard/appointments/components/selected_day_appointments.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Grid, Typography, IconButton, List, ListItem } from \"@mui/material\";\nimport { getAppointmentsByDate } from \"../../../../controllers/appointments_controller\";\nimport { primaryColor } from \"../../../../constants/colors\";\nimport { useUserContext } from \"../../../../components/contexts/user_context_provider\";\nimport { useSnackbar } from \"notistack\";\nimport AddAppointmentForm from \"./forms/add_appointment_form\";\nimport UpdateAppointmentForm from \"./forms/update_appointment_form\";\nimport AppointmentList from \"./appointments_list\";\n\nconst SelectedDayAppointments = ({ selectedDay, selectedMonth, selectedYear, reload, setReload }) => {\n  const { token } = useUserContext();\n  const [appointments, setAppointments] = useState([]);\n  const [isAddForm, setIsAddForm] = useState(true);\n  const [selectedAppointment, setSelectedAppointment] = useState(null);\n\n  useEffect(() => {\n    setIsAddForm((isAddForm) => false);\n  }, [selectedAppointment]);\n\n  useEffect(() => {\n    setIsAddForm(true);\n    var getAppointmentsInternal = async () => {\n      var response = await getAppointmentsByDate(token, `${selectedDay}-${selectedMonth}-${selectedYear}`);\n      console.log(JSON.stringify(response));\n      if (response.status === \"OK\") {\n        setAppointments(response.data);\n      }\n    };\n\n    getAppointmentsInternal();\n\n    return () => {};\n  }, [selectedDay, selectedMonth, selectedYear, reload]);\n\n  return (\n    <Grid\n      container\n      style={{\n        backgroundColor: primaryColor,\n        padding: 15,\n        borderRadius: 12,\n      }}\n    >\n      <Grid item xs={12}>\n        <Typography variant=\"h5\" style={{ fontWeight: \"bold\", color: \"white\" }}>\n          {`Date: ${selectedDay}.${selectedMonth + 1}.${selectedYear}`}\n        </Typography>\n      </Grid>\n      <Grid item xs={12} style={{ height: \"20px\" }} />\n      <Grid item xs={12}>\n        {isAddForm ? (\n          <AddAppointmentForm\n            setReload={setReload}\n            selectedDate={`${selectedDay}-${selectedMonth}-${selectedYear}`}\n          />\n        ) : (\n          <UpdateAppointmentForm\n            setIsAddForm={setIsAddForm}\n            appointment={selectedAppointment}\n            setReload={setReload}\n          />\n        )}\n      </Grid>\n      <Grid item xs={12} style={{ height: \"20px\" }} />\n      <Grid item xs={12}>\n        <Typography variant=\"h5\" style={{ fontWeight: \"bold\", color: \"white\" }}>\n          Appointments\n        </Typography>\n      </Grid>\n      <Grid item xs={12} style={{ height: \"10px\" }} />\n      <Grid item container xs={12}>\n        <AppointmentList\n          appointments={appointments}\n          setSelectedAppointment={setSelectedAppointment}\n          setReload={setReload}\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default SelectedDayAppointments;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}